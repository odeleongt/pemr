% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/annotate_monitor.R
\name{annotate_monitor}
\alias{annotate_monitor}
\title{Single function to call when reading monitor files.}
\usage{
annotate_monitor(file, type, ...)
}
\arguments{
\item{file}{Path to the file containing monitor metadata.}

\item{type}{Type of monitor with which the data was recorded.
  Currently there are two valid types:

  * "ecm" or "ecm-full": metadata from ECM.

  Any other option will be coerced to "unknown" and return an empty data
  frame.}

\item{...}{Ignored}
}
\value{
A data frame with all columns from the monitor file.
}
\description{
Typical output from personal environmental monitors will be plain text files
containing either raw data in a readily usable format (e.g. PATS+, UPAS) or
raw data in binary format which needs to be pre-processed using the monitor
software (e.g. ECM).

`annotate_monitor()` will read data from the header of a single file and
return a data frame with all the metadata contained in that header.
}
\details{
Usually you will be interested in reading data form multiple files, this
can be easily achieved by listing in a data frame all files and types you
want to read and iterating over it with \code{\link{purrr::map2}} as shown
in the examples below. Use \code{annotate_monitor} in the same way to
read in the header metadata for each file, and then use
 \code{\link{tidyr::unnest}} to extract all the metadata for each file.
}
\examples{
\dontrun{
# Load required packages
library(package = "pemr")

# Define files and types. This can be any data frame, so composing data in a
# spreadsheet and reading it in works too
data_frame(
 files_col = c("path/to/file1.csv", "path/to/file2.csv"),
 types_col = c("ecm", "upas")
) \%>\%
mutate(
  data = map2(files_col, types_col, read_monitor),
  header = map2(files_col, types_col, annotate_monitor)
) \%>\%
unnest()
}

}
